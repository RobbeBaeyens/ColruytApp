<Application x:Class="Colruyt_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Colruyt_WPF"
             StartupUri="Gebruikers.xaml">
    <Application.Resources>
        <Color x:Key="Green">#50532F</Color>
        <Color x:Key="Beige">#D7B56E</Color>
        <Color x:Key="Yellow">#C28428</Color>
        <Color x:Key="Orange">#C16212</Color>
        <Color x:Key="LighterOrange">#D17222</Color>
        <Color x:Key="Red">#36191C</Color>

        <Color x:Key="DarkColor">#222</Color>
        <Color x:Key="LightColor">#FAFAFA</Color>
        <Color x:Key="DarkerLightColor">#E5E5E5</Color>

        <SolidColorBrush x:Key="Primary" Color="{DynamicResource Orange}"/>
        <SolidColorBrush x:Key="LighterPrimary" Color="{DynamicResource LighterOrange}"/>
        <SolidColorBrush x:Key="Secondary" Color="{DynamicResource Beige}"/>
        <SolidColorBrush x:Key="Success" Color="{DynamicResource Green}"/>
        <SolidColorBrush x:Key="Danger" Color="{DynamicResource Red}"/>
        <SolidColorBrush x:Key="Alert" Color="{DynamicResource Yellow}"/>

        <SolidColorBrush x:Key="Dark" Color="{DynamicResource DarkColor}"/>
        <SolidColorBrush x:Key="Light" Color="{DynamicResource LightColor}"/>
        <SolidColorBrush x:Key="DarkerLight" Color="{DynamicResource DarkerLightColor}"/>

        <Style TargetType="{x:Type Button}" x:Key="Hoverlessbtn">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding ="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="OrangeButton" BasedOn="{StaticResource Hoverlessbtn}">
            <Setter Property="Background" Value="{StaticResource Primary}"/>
            <Setter Property="Foreground" Value="{StaticResource Light}"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Height" Value="60"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LighterPrimary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="ComboBox" x:Key="OrangeComboBox">
            <Setter Property="Background" Value="{StaticResource Primary}"/>
            <Setter Property="Foreground" Value="{StaticResource Light}"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Height" Value="60"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LighterPrimary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="LabelStyle">
            <Setter Property="Foreground" Value="{StaticResource Dark}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="40"/>
        </Style>

        <Style TargetType="TextBox" x:Key="OrangeTextBox">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="{StaticResource Light}"/>
            <Setter Property="Foreground" Value="{StaticResource Primary}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="TextAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="20" Background="{StaticResource Light}" BorderBrush="{StaticResource Primary}"  BorderThickness="5" Padding="5">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DarkerLight}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Primary}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{StaticResource Primary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PasswordBox" x:Key="OrangePasswordBox">
            <Setter Property="Background" Value="{StaticResource Light}"/>
            <Setter Property="Foreground" Value="{StaticResource Primary}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Border" CornerRadius="20" Background="{StaticResource Light}" BorderBrush="{StaticResource Primary}"  BorderThickness="5" Padding="5">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DarkerLight}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Primary}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{StaticResource Primary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Secondary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--Categorie Button Stijl-->
        <Style x:Key="CatButtonSizeStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="110"/>
            <Setter Property="Width" Value="145"/>
        </Style>

    </Application.Resources>
</Application>
